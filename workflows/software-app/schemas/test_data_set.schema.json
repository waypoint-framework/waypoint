{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schemas.waypoint.dev/test_data_set.schema.json",
  "title": "Test Data Set Schema",
  "description": "Schema for capturing test data sets with preconditions, actions, and postconditions. Used for testing each action in user experiences, with one action per test.",
  "type": "object",
  "properties": {
    "testSuites": {
      "type": "array",
      "description": "Collection of test suites organizing related test data sets",
      "items": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "name": {"type": "string"},
          "description": {"type": "string"},
          "feature": {"type": "string", "description": "Feature being tested"},
          "userExperience": {"type": "string", "description": "Reference to user experience scenario"},
          "userInterface": {"type": "string", "description": "Reference to user interface flow"},
          "priority": {"enum": ["critical", "high", "medium", "low"]},
          "tags": {"type": "array", "items": {"type": "string"}, "description": "Tags for categorizing tests"},
          "testDataSets": {
            "type": "array",
            "description": "Individual test data sets within this suite",
            "items": {
              "type": "object",
              "properties": {
                "id": {"type": "string"},
                "name": {"type": "string"},
                "description": {"type": "string"},
                "testType": {
                  "enum": ["unit", "integration", "end_to_end", "api", "ui", "performance", "security", "accessibility", "usability"],
                  "description": "Type of test this data set is for"
                },
                "action": {
                  "type": "object",
                  "description": "Single action being tested",
                  "properties": {
                    "id": {"type": "string"},
                    "name": {"type": "string"},
                    "description": {"type": "string"},
                    "type": {
                      "enum": ["user_action", "system_action", "api_call", "database_operation", "file_operation", "network_operation", "calculation", "validation", "transformation"],
                      "description": "Type of action being performed"
                    },
                    "actor": {
                      "enum": ["user", "system", "external_service", "background_process", "timer", "webhook"],
                      "description": "Who or what performs this action"
                    },
                    "method": {"type": "string", "description": "Specific method, function, or interaction"},
                    "parameters": {
                      "type": "object",
                      "description": "Parameters passed to the action",
                      "properties": {
                        "input": {"description": "Input data or values"},
                        "context": {"description": "Contextual information needed"},
                        "configuration": {"description": "Configuration settings"},
                        "environment": {"description": "Environment-specific data"}
                      }
                    },
                    "location": {"type": "string", "description": "Where this action occurs (UI element, API endpoint, etc.)"},
                    "timing": {
                      "type": "object",
                      "description": "Timing considerations for the action",
                      "properties": {
                        "timeout": {"type": "string", "description": "Maximum time allowed"},
                        "delay": {"type": "string", "description": "Delay before action"},
                        "duration": {"type": "string", "description": "Expected duration"},
                        "frequency": {"type": "string", "description": "How often action repeats"}
                      }
                    }
                  },
                  "required": ["id", "name", "description", "type", "actor"]
                },
                "preconditions": {
                  "type": "object",
                  "description": "State that must exist before the action",
                  "properties": {
                    "systemState": {
                      "type": "object",
                      "description": "Required system state",
                      "properties": {
                        "applicationState": {"description": "State of the application"},
                        "userSession": {"description": "User authentication and session state"},
                        "permissions": {"type": "array", "items": {"type": "string"}, "description": "Required user permissions"},
                        "featureFlags": {"type": "object", "description": "Required feature flag states"},
                        "configuration": {"type": "object", "description": "Required configuration settings"},
                        "services": {"type": "array", "items": {"type": "string"}, "description": "Required external services to be available"}
                      }
                    },
                    "dataState": {
                      "type": "object",
                      "description": "Required data state",
                      "properties": {
                        "database": {"description": "Database records that must exist"},
                        "files": {"type": "array", "items": {"type": "string"}, "description": "Files that must exist"},
                        "cache": {"description": "Cache entries that must exist"},
                        "externalData": {"description": "External data dependencies"},
                        "userGeneratedData": {"description": "User-created data that must exist"}
                      }
                    },
                    "environmentState": {
                      "type": "object",
                      "description": "Required environment state",
                      "properties": {
                        "browserState": {"description": "Browser/client state requirements"},
                        "networkConditions": {"type": "string", "description": "Required network conditions"},
                        "deviceState": {"description": "Device-specific state requirements"},
                        "timeZone": {"type": "string", "description": "Required timezone"},
                        "locale": {"type": "string", "description": "Required locale/language"},
                        "environmentVariables": {"type": "object", "description": "Required environment variables"}
                      }
                    },
                    "businessState": {
                      "type": "object",
                      "description": "Required business state",
                      "properties": {
                        "userType": {"type": "string", "description": "Type of user performing action"},
                        "subscriptionLevel": {"type": "string", "description": "User's subscription or access level"},
                        "organizationState": {"description": "Organization or team state"},
                        "billingState": {"description": "Billing or payment state"},
                        "complianceState": {"description": "Compliance or regulatory state"}
                      }
                    },
                    "testData": {
                      "type": "object",
                      "description": "Specific test data needed",
                      "properties": {
                        "fixtures": {"type": "array", "items": {"type": "string"}, "description": "Test fixtures to load"},
                        "mocks": {"type": "array", "items": {"type": "string"}, "description": "External services to mock"},
                        "seedData": {"description": "Data to seed before test"},
                        "factories": {"type": "array", "items": {"type": "string"}, "description": "Data factories to use"}
                      }
                    }
                  }
                },
                "postconditions": {
                  "type": "object",
                  "description": "Expected state after the action",
                  "properties": {
                    "systemState": {
                      "type": "object",
                      "description": "Expected system state changes",
                      "properties": {
                        "applicationState": {"description": "Expected application state"},
                        "sessionChanges": {"description": "Expected session state changes"},
                        "permissionChanges": {"description": "Expected permission changes"},
                        "configurationChanges": {"description": "Expected configuration changes"},
                        "serviceInteractions": {"type": "array", "items": {"type": "string"}, "description": "Expected external service calls"}
                      }
                    },
                    "dataState": {
                      "type": "object",
                      "description": "Expected data state changes",
                      "properties": {
                        "databaseChanges": {"description": "Expected database record changes"},
                        "fileChanges": {"type": "array", "items": {"type": "string"}, "description": "Expected file system changes"},
                        "cacheChanges": {"description": "Expected cache changes"},
                        "dataCreated": {"description": "New data that should be created"},
                        "dataModified": {"description": "Existing data that should be modified"},
                        "dataDeleted": {"description": "Data that should be deleted"}
                      }
                    },
                    "userExperience": {
                      "type": "object",
                      "description": "Expected user experience outcomes",
                      "properties": {
                        "uiChanges": {"description": "Expected UI state changes"},
                        "notifications": {"type": "array", "items": {"type": "string"}, "description": "Expected notifications or messages"},
                        "navigation": {"type": "string", "description": "Expected navigation changes"},
                        "feedback": {"description": "Expected user feedback or confirmation"},
                        "accessibility": {"description": "Expected accessibility announcements"},
                        "performance": {"description": "Expected performance characteristics"}
                      }
                    },
                    "businessOutcomes": {
                      "type": "object",
                      "description": "Expected business outcomes",
                      "properties": {
                        "metrics": {"description": "Expected metric changes"},
                        "events": {"type": "array", "items": {"type": "string"}, "description": "Expected business events triggered"},
                        "workflows": {"type": "array", "items": {"type": "string"}, "description": "Expected workflow progressions"},
                        "notifications": {"type": "array", "items": {"type": "string"}, "description": "Expected business notifications"},
                        "reports": {"description": "Expected report or audit entries"}
                      }
                    },
                    "integrations": {
                      "type": "object",
                      "description": "Expected external integration outcomes",
                      "properties": {
                        "apiCalls": {"type": "array", "items": {"type": "string"}, "description": "Expected API calls made"},
                        "webhooks": {"type": "array", "items": {"type": "string"}, "description": "Expected webhooks triggered"},
                        "messages": {"type": "array", "items": {"type": "string"}, "description": "Expected messages sent"},
                        "files": {"type": "array", "items": {"type": "string"}, "description": "Expected files created/modified"},
                        "logs": {"description": "Expected log entries"}
                      }
                    }
                  }
                },
                "validationRules": {
                  "type": "array",
                  "description": "Rules for validating test success",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "string"},
                      "name": {"type": "string"},
                      "type": {"enum": ["assertion", "verification", "check", "comparison", "match", "exists", "count"]},
                      "description": {"type": "string"},
                      "target": {"type": "string", "description": "What to validate"},
                      "condition": {"type": "string", "description": "Validation condition"},
                      "expectedValue": {"description": "Expected value or pattern"},
                      "tolerance": {"description": "Acceptable variance for numeric comparisons"},
                      "timeout": {"type": "string", "description": "Maximum time to wait for condition"},
                      "retries": {"type": "integer", "description": "Number of retries allowed"},
                      "priority": {"enum": ["critical", "high", "medium", "low"], "description": "Validation priority"}
                    },
                    "required": ["id", "name", "type", "description", "target", "condition"]
                  }
                },
                "errorScenarios": {
                  "type": "array",
                  "description": "Expected error conditions and handling",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "string"},
                      "name": {"type": "string"},
                      "description": {"type": "string"},
                      "trigger": {"type": "string", "description": "What triggers this error"},
                      "errorType": {"enum": ["validation", "permission", "network", "timeout", "system", "business_rule", "data_integrity"]},
                      "expectedBehavior": {"type": "string", "description": "How system should handle error"},
                      "recovery": {"type": "string", "description": "Expected recovery mechanism"},
                      "userImpact": {"type": "string", "description": "Impact on user experience"}
                    },
                    "required": ["id", "name", "trigger", "errorType", "expectedBehavior"]
                  }
                },
                "performance": {
                  "type": "object",
                  "description": "Performance expectations for this test",
                  "properties": {
                    "responseTime": {"type": "string", "description": "Expected response time"},
                    "throughput": {"type": "string", "description": "Expected throughput"},
                    "resourceUsage": {"description": "Expected resource consumption"},
                    "loadConditions": {"type": "string", "description": "Load conditions for test"},
                    "scalability": {"description": "Scalability expectations"}
                  }
                },
                "metadata": {
                  "type": "object",
                  "description": "Additional test metadata",
                  "properties": {
                    "author": {"type": "string"},
                    "created": {"type": "string", "format": "date-time"},
                    "lastModified": {"type": "string", "format": "date-time"},
                    "version": {"type": "string"},
                    "coverage": {"type": "array", "items": {"type": "string"}, "description": "What this test covers"},
                    "dependencies": {"type": "array", "items": {"type": "string"}, "description": "Test dependencies"},
                    "environment": {"type": "array", "items": {"type": "string"}, "description": "Environments where test applies"},
                    "automation": {"type": "boolean", "description": "Whether test is automated"},
                    "frequency": {"enum": ["every_commit", "daily", "weekly", "monthly", "on_demand"], "description": "How often test runs"},
                    "maintenance": {"type": "string", "description": "Maintenance notes"}
                  }
                }
              },
              "required": ["id", "name", "description", "testType", "action", "preconditions", "postconditions", "validationRules"]
            }
          }
        },
        "required": ["id", "name", "description", "testDataSets"]
      }
    },
    "globalConfiguration": {
      "type": "object",
      "description": "Global test configuration settings",
      "properties": {
        "testEnvironments": {
          "type": "array",
          "description": "Available test environments",
          "items": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "description": {"type": "string"},
              "baseUrl": {"type": "string"},
              "configuration": {"type": "object"}
            }
          }
        },
        "dataManagement": {
          "type": "object",
          "description": "Test data management settings",
          "properties": {
            "strategy": {"enum": ["fresh", "shared", "isolated", "cleanup"], "description": "Data management strategy"},
            "retention": {"type": "string", "description": "How long to keep test data"},
            "anonymization": {"type": "boolean", "description": "Whether to anonymize sensitive data"},
            "backups": {"type": "boolean", "description": "Whether to backup test data"}
          }
        },
        "reporting": {
          "type": "object",
          "description": "Test reporting configuration",
          "properties": {
            "formats": {"type": "array", "items": {"type": "string"}, "description": "Supported report formats"},
            "destination": {"type": "string", "description": "Where to store reports"},
            "notifications": {"type": "array", "items": {"type": "string"}, "description": "Notification channels for results"}
          }
        }
      }
    }
  },
  "required": ["testSuites"]
}
